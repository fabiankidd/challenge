{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SortPipe {\n  // transform(value: any[]): any []{\n  //   return value.sort(((a,b) => a.name.localeCompare(b.name)))\n  // }\n  transform(value, order = \"asc\") {\n    return value.sort((a, b) => {\n      if (order === \"asc\") {\n        return a.sequence - b.sequence;\n      } else if (order === \"desc\") {\n        return b.sequence - a.sequence;\n      }\n      return 0;\n    });\n  }\n  static #_ = this.ɵfac = function SortPipe_Factory(t) {\n    return new (t || SortPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"sortPipe\",\n    type: SortPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["SortPipe","transform","value","order","sort","a","b","sequence","_","_2","pure"],"sources":["C:\\dev\\challenge\\src\\app\\pipes\\sort.pipe.ts"],"sourcesContent":["import { Pipe, type PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortPipe'\n})\nexport class SortPipe implements PipeTransform {\n\n  // transform(value: any[]): any []{\n  //   return value.sort(((a,b) => a.name.localeCompare(b.name)))\n  // }\n  transform(value: any[], order: \"asc\" | \"desc\" = \"asc\"): any[] {\n    return value.sort((a, b) => {\n      if (order === \"asc\") {\n        return a.sequence - b.sequence;\n      } else if (order === \"desc\") {\n        return b.sequence - a.sequence;\n      }\n      return 0;\n    });\n  }\n \n}\n"],"mappings":";AAKA,OAAM,MAAOA,QAAQ;EAEnB;EACA;EACA;EACAC,SAASA,CAACC,KAAY,EAAEC,KAAA,GAAwB,KAAK;IACnD,OAAOD,KAAK,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAI;MACzB,IAAIH,KAAK,KAAK,KAAK,EAAE;QACnB,OAAOE,CAAC,CAACE,QAAQ,GAAGD,CAAC,CAACC,QAAQ;OAC/B,MAAM,IAAIJ,KAAK,KAAK,MAAM,EAAE;QAC3B,OAAOG,CAAC,CAACC,QAAQ,GAAGF,CAAC,CAACE,QAAQ;;MAEhC,OAAO,CAAC;IACV,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAdUR,QAAQ;EAAA;EAAA,QAAAS,EAAA,G;;UAART,QAAQ;IAAAU,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}