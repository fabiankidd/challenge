{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SortPipe {\n  // transform(value: any[]): any []{\n  //   return value.sort(((a,b) => a.name.localeCompare(b.name)))\n  // }\n  transform(array, args) {\n    array.sort((a, b) => {\n      if (a < b) {\n        return -1;\n      } else if (a > b) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n  static #_ = this.ɵfac = function SortPipe_Factory(t) {\n    return new (t || SortPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"sortPipe\",\n    type: SortPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["SortPipe","transform","array","args","sort","a","b","_","_2","pure"],"sources":["C:\\dev\\challenge\\src\\app\\pipes\\sort.pipe.ts"],"sourcesContent":["import { Pipe, type PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sortPipe'\n})\nexport class SortPipe implements PipeTransform {\n\n  // transform(value: any[]): any []{\n  //   return value.sort(((a,b) => a.name.localeCompare(b.name)))\n  // }\n  transform(array: Array<any>, args: string): Array<any> {\n    array.sort((a: any, b: any) => {\n      if (a < b) {\n        return -1;\n      } else if (a > b) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n    return array;\n  }\n \n}\n"],"mappings":";AAKA,OAAM,MAAOA,QAAQ;EAEnB;EACA;EACA;EACAC,SAASA,CAACC,KAAiB,EAAEC,IAAY;IACvCD,KAAK,CAACE,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAC5B,IAAID,CAAC,GAAGC,CAAC,EAAE;QACT,OAAO,CAAC,CAAC;OACV,MAAM,IAAID,CAAC,GAAGC,CAAC,EAAE;QAChB,OAAO,CAAC;OACT,MAAM;QACL,OAAO,CAAC;;IAEZ,CAAC,CAAC;IACF,OAAOJ,KAAK;EACd;EAAC,QAAAK,CAAA,G;qBAhBUP,QAAQ;EAAA;EAAA,QAAAQ,EAAA,G;;UAARR,QAAQ;IAAAS,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}